#!/usr/bin/env python
import random
import re
import sys

print "/* Autogenerated by `%s` ... do not edit */" % ' '.join(sys.argv)

maxbits = 3
if len(sys.argv) > 1: maxbits = int(sys.argv[1])

minbits = 1
if len(sys.argv) > 2: minbits = int(sys.argv[2])

sre = re.compile("^(1{%d,%d}0{%d,%d})+$" % (minbits,maxbits,minbits,maxbits))

symbols = []
for symbol in range(0, 256):
    x = '1'
    for bit in [1,2,4,8,16,32,64,128]:
        x += (symbol & bit) and '0' or '1'
    x += '0'
    if sre.match(x):
        symbols.append(chr(symbol))
        
print "/* maxbits %d minbits %d symbols %d */" % (maxbits, minbits, len(symbols))

print

print "#define NSYMBOLS (%d)" % len(symbols)

print

print "unsigned char encode[NSYMBOLS] = {",
for n, s in enumerate(symbols):
    if not n % 8: print "\n\t",
    print "0x%02X," % ord(s),
print "\n};"

decode = [ -1 ] * 256;
for n, s in enumerate(symbols):
    decode[ord(s)] = n;
    
print

print "int decode[256] = {",
for n, d in enumerate(decode):
    if not (n % 8): print "\n\t",
    print "%3d," % d,
print "\n};"