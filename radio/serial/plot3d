#!/usr/bin/perl -w
# $Id: plot3d,v 1.1 2009-05-20 08:01:56 nick Exp $

use strict;
use Data::Dumper;

my ($filename, $interval) = @ARGV;
$interval ||= 1_000_000;

open(my $fp, $filename) or die "can't open $filename";

$filename =~ s/\.snap$//;

my $nodes = {};

my $lasttime = 0;
my $nexttime = 0;
my $count = 0;

while (defined($_ = <$fp>)) {
	my ($t, $nn, $x, $y, $z, @ne) = split /\s+/;
	die "TIME OUT OF JOINT AT LINE $. TIME $t\n" if $t < $lasttime;
	$lasttime = $t;
	$nexttime ||= $t;
	
	while ($t > $nexttime) {
		makeplot(sprintf('wrl/%s-%06d.wrl', $filename, $count), $nodes);
		$nexttime += $interval;
		$count++;
	}
	$nodes->{$nn} = [ [ $x, $y, $z ], [ @ne ] ];
}
makeplot(sprintf('wrl/%s-%06d.wrl', $filename, $count), $nodes);

close($fp);

##############################################################################

sub makeplot {
	my ($filename, $nodes) = @_;

	print "Plotting $filename ... ", scalar keys %$nodes, " nodes\n";

 	open(my $fout, ">$filename");

	print $fout <<__EOF ;
#VRML V2.0 utf8
# plot3d
Viewpoint {
	position 0 0 1000
	orientation 0 0 1 0
}

PROTO Node [ ] {
    Shape { 
	geometry Sphere { radius 7 }
	appearance Appearance {
	    material Material {
		diffuseColor 0 1 0
		specularColor 1 1 1
		transparency .1
	    }
	}
    }
}

Shape {
	geometry IndexedLineSet {
                coord DEF Nodes Coordinate {
                        point [
__EOF

	my $nnum = 0;
	my %nnum;
	foreach my $n1 (keys %$nodes) {
		my ($x, $y, $z) = @{$nodes->{$n1}[0]};
		print $fout "\t\t\t$x $y $z, # $nnum\n";
		$nnum{$n1} = $nnum;
		$nnum++;
	}
	
	print $fout "\t\t\t]\n\t\t}\n\t\tcoordIndex [\n";

	foreach my $n1 (keys %$nodes) {
		my ($v1, $links) = @{$nodes->{$n1}};
		foreach my $n2 (@$links) {
			my $nn1 = $nnum{$n1};
			my $nn2 = $nnum{$n2};
			print $fout "\t\t\t$nn1, $nn2, -1, # $n1 -> $n2\n" if $nn1 and $nn2;	
		}
	}

	print $fout "\t\t]\n\t}\n}\n\n";

	foreach my $n1 (keys %$nodes) {
		my ($x, $y, $z) = @{$nodes->{$n1}[0]};
		print $fout "Transform { translation $x $y $z children Node { } } # $n1 \n";

	}
}
