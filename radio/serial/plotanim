#!/usr/bin/perl -w
# $Id: plotanim,v 1.5 2009-08-05 06:18:31 nick Exp $

use strict;
use Data::Dumper;

our $Revision = qw$Revision: 1.5 $[1];

my $nodes = {};

my $lasttime = 0;
my $nexttime = 0;
my $count = 0;

my ($st, $et);

while (<>) {
	my ($t, $nn, $x, $y, $z, @ne) = split /\s+/;
	die "TIME OUT OF JOINT AT LINE $. TIME $t\n" if $t < $lasttime;
	$lasttime = $t;
	$nexttime ||= $t;
	
	push @{$nodes->{$nn}}, [ $t, $x, $y, $z ];

	$st ||= $t; $et = $t;
}

my $elapsed = ($et - $st) / 1000000;

print << "__EOF" ;
#VRML V2.0 utf8
# Generated by plotanim $Revision

Viewpoint {
    position 0 0 1000
    orientation 0 0 1 0
}

Shape {
    geometry IndexedLineSet {
	coord Coordinate {
	    point [
	        +100, +100, +100
	        +100, +100, -100
	        +100, -100, -100
	        +100, -100, +100
	        -100, +100, +100
	        -100, +100, -100
	        -100, -100, -100
	        -100, -100, +100
	    ]
	}
	coordIndex [
	    0, 1, 2, 3, 0, 4, 5, 6, 7, 4, -1,
	    1, 5, -1,
	    2, 6, -1,
	    3, 7, -1,
	]
    }
}

Billboard {
    children [
	Transform {
	    translation -250 250 -500
	    children [
		Cylinder {
		    radius 1
		    height 500
		}
		DEF CLOCK Transform {
		    translation 0 0 0
		    children [
			Sphere {
			    radius 10
			}
		    ]
		}
	    ]
	}
    ] 
    axisOfRotation 0 0 0 
    bboxCenter 0 0 0
    bboxSize -1 -1 -1
} 

DEF TIMER TimeSensor {
    loop TRUE
    cycleInterval $elapsed
}

DEF CLOCKPATH PositionInterpolator {
    key [ 0, 1 ]
    keyValue [ 0, -250, 0, 0, 250, 0 ]
}

ROUTE TIMER.fraction_changed TO CLOCKPATH.set_fraction
ROUTE CLOCKPATH.value_changed TO CLOCK.translation

__EOF

# Color to use for the balls.
my @cols = ( "1 0 0", "0 1 0", "1 0 1", "0 1 1", "1 1 0", "0.8 0.8 0.8", "0.5 0.5 1", "0.5 1 0", "1 0.5 0" );
my $cc = 0;

foreach my $nn (keys %$nodes) {
   my $col = $cols[$nn % @cols];
   
   print << "__EOF";
DEF NODE$nn Transform {
    translation 0 0 0
    children [
	Shape {
	    geometry Sphere { radius 7 }
	    appearance Appearance {
		material DEF NMAT$nn Material {
		    diffuseColor $col
		    specularColor 1 1 1
		    transparency 0.1
		}
	    }
	}
	Billboard {
	    children [
		Text {
		    string [ "$nn" ]
		    fontStyle FontStyle { size 10 }
		}
	    ]
	    axisOfRotation 0 0 0
	}
    ]
}

__EOF
}

foreach my $nn (keys %$nodes) {
    my $intk = join "\n\t", map { ($_->[0] - $st) / ($et - $st) } @{$nodes->{$nn}};
    my $intv = join ",\n\t", map { join ' ', $_->[1], $_->[2], $_->[3] } @{$nodes->{$nn}};
    
    print << "__EOF";
DEF PATH$nn PositionInterpolator {
    key [
        $intk
    ]
    keyValue [
        $intv
    ]
}

ROUTE TIMER.fraction_changed TO PATH$nn.set_fraction
ROUTE PATH$nn.value_changed TO NODE$nn.translation

__EOF
}

print "# EOF\n";
